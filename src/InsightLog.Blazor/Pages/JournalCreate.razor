@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
@inject JournalEntryService JournalService

<MudDialog>
    <TitleContent>New Journal Entry</TitleContent>
    <DialogContent>
        <EditForm Model="@entry" OnValidSubmit="CreateEntry">
            <DataAnnotationsValidator />
            <MudStack Spacing="3">
                <MudTextField @bind-Value="entry.Content" Label="Content" Lines="6" Required="true" />
                <MudDatePicker Label="Created On" @bind-Date="entry.CreatedDate" />
                <MudStack Row="true" Justify="Justify.FlexEnd" Spacing="2"></MudStack>
                <MudStack Row="true" Justify="Justify.FlexEnd" Spacing="2">
                    <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled">Save</MudButton>
                    <MudButton OnClick="Cancel" Color="Color.Secondary" Variant="Variant.Text">Cancel</MudButton>
                </MudStack>
            </MudStack>
        </EditForm>
    </DialogContent>
</MudDialog>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    private JournalEntryModel entry = new()
    {
        CreatedDate = DateTime.UtcNow
    };

    private async Task CreateEntry()
    {
        var command = new CreateJournalEntry.Command(
            new UserId(Guid.NewGuid()), // Replace with actual user context
            entry.Content!,
            entry.CreatedDate,
            null);

        var dto = await JournalService.CreateAsync(command);
        Snackbar.Add("Entry created", Severity.Success);
        MudDialog.Close(DialogResult.Ok(dto));
    }

    public class JournalEntryModel
    {
        [Required]
        [MaxLength(5000)]
        public string Content { get; set; } = string.Empty;

        public DateTime? CreatedDate { get; set; }
    }
}
