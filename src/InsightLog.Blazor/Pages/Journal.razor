@page "/journal"

<h1>Journal Entries</h1>

<MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="OpenCreateDialog" Color="Color.Primary" Variant="Variant.Filled" class="mb-4">
    New Entry
</MudButton>

@if (entries is null)
{
    <p><em>Loading...</em></p>
}
else if (!entries.Any())
{
    <p>No entries.</p>
}
else
{
    <ul>
        @foreach (var entry in entries)
        {
            <li>@entry.CreatedDate.ToShortDateString(): @entry.Content</li>
        }
    </ul>
}

@code {
    private List<JournalEntryDto>? entries;

    protected override async Task OnInitializedAsync()
    {
        var userId = Guid.NewGuid();
        entries = await JournalService.GetEntriesAsync(userId);
    }

    [Inject]
    public JournalEntryService JournalService { get; set; } = default!;

    [Inject]
    public IDialogService DialogService { get; set; } = default!;

    private async Task OpenCreateDialog()
    {
        var dialog = await DialogService.ShowAsync<JournalCreate>("New Journal Entry");
        var result = await dialog.Result;
        if (result != null && !result.Canceled && result.Data is JournalEntryDto dto)
        {
            entries ??= new();
            entries.Insert(0, dto);
            StateHasChanged();
        }
    }
}
